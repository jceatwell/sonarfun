version: "3"
services:

  sonarqubedb:
    image: postgres:10.1
    container_name: sonarqubedb
    restart: unless-stopped
    environment:
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=passw0rd
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_db:/var/lib/postgresql10
      - postgresql_data:/var/lib/postgresql10/data

  sonarqube:
    image: sonarqube:9.9.0-community
    container_name: sonarqube
    depends_on:
      - sonarqubedb
    restart: unless-stopped
    environment:
      - SONARQUBE_JDBC_USERNAME=pguser
      - SONARQUBE_JDBC_PASSWORD=passw0rd
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonarqubedb:5432/sonarqube
    ports:
      - "9000:9000"
      - "9092:9092"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    healthcheck:
      test: "echo 0"
      start_period: 3s

  setsonarpass:
    image: alpine/curl:3.14
    container_name: setsonarpass
    depends_on:
      sonarqube:
        condition: service_healthy
    command: -sS -u admin:admin -X POST "http://sonarqube:9000/api/users/change_password?login=admin&previousPassword=admin&password=newAdminPassword" || true

  sqexporter:
    build: 
      context: ./sonarqube-prometheus-exporter
      dockerfile: Dockerfile
    image: sonarqube-prometheus-exporter:1.0.1
    container_name: sqexporter
    restart: unless-stopped
    depends_on:
      setsonarpass:
        condition: service_completed_successfully
    environment:
      - SONAR_URL=http://sonarqube:9000
      - SONAR_USER=admin
      - SONAR_PASSWORD=newAdminPassword
    ports:
      - "9120:9120"

  prometheus:
    image: docker.io/prom/prometheus:v2.28.1
    ports:
      - 9090:9090
    # links:
    #   - sqexporter
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: docker.io/grafana/grafana:8.0.5
    ports:
      - 3000:3000
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_INSTALL_PLUGINS: grafana-polystat-panel,yesoreyeram-boomtable-panel
    links:
      - prometheus
    volumes:
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/default.yml
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/default.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  postgresql_data:
  sonarqube_bundled-plugins:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_db:
  sonarqube_extensions:
